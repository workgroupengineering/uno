// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Data.Pdf
{
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
#endif
	public partial class PdfPage : global::System.IDisposable
	{
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal PdfPage()
		{
		}
#endif
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Data.Pdf.PdfPageDimensions Dimensions
		{
			get
			{
				throw new global::System.NotImplementedException("The member PdfPageDimensions PdfPage.Dimensions is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PdfPageDimensions%20PdfPage.Dimensions");
			}
		}
#endif
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Index
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint PdfPage.Index is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20PdfPage.Index");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float PreferredZoom
		{
			get
			{
				throw new global::System.NotImplementedException("The member float PdfPage.PreferredZoom is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%20PdfPage.PreferredZoom");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Data.Pdf.PdfPageRotation Rotation
		{
			get
			{
				throw new global::System.NotImplementedException("The member PdfPageRotation PdfPage.Rotation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PdfPageRotation%20PdfPage.Rotation");
			}
		}
#endif
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Size Size
		{
			get
			{
				throw new global::System.NotImplementedException("The member Size PdfPage.Size is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Size%20PdfPage.Size");
			}
		}
#endif
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction RenderToStreamAsync(global::Windows.Storage.Streams.IRandomAccessStream outputStream)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction PdfPage.RenderToStreamAsync(IRandomAccessStream outputStream) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20PdfPage.RenderToStreamAsync%28IRandomAccessStream%20outputStream%29");
		}
#endif
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction RenderToStreamAsync(global::Windows.Storage.Streams.IRandomAccessStream outputStream, global::Windows.Data.Pdf.PdfPageRenderOptions options)
		{
			throw new global::System.NotImplementedException("The member IAsyncAction PdfPage.RenderToStreamAsync(IRandomAccessStream outputStream, PdfPageRenderOptions options) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20PdfPage.RenderToStreamAsync%28IRandomAccessStream%20outputStream%2C%20PdfPageRenderOptions%20options%29");
		}
#endif
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction PreparePageAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction PdfPage.PreparePageAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20PdfPage.PreparePageAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.Data.Pdf.PdfPage.Index.get
		// Forced skipping of method Windows.Data.Pdf.PdfPage.Size.get
		// Forced skipping of method Windows.Data.Pdf.PdfPage.Dimensions.get
		// Forced skipping of method Windows.Data.Pdf.PdfPage.Rotation.get
		// Forced skipping of method Windows.Data.Pdf.PdfPage.PreferredZoom.get
#if false || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Data.Pdf.PdfPage", "void PdfPage.Dispose()");
		}
#endif
		// Processing: System.IDisposable
	}
}
