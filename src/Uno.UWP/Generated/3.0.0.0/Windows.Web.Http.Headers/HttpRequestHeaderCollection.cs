// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Web.Http.Headers
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class HttpRequestHeaderCollection : global::System.Collections.Generic.IDictionary<string, string>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::Windows.Foundation.IStringable
	{
		// Skipping already declared property Size
		// Skipping already declared property Referer
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpCredentialsHeaderValue ProxyAuthorization
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpCredentialsHeaderValue HttpRequestHeaderCollection.ProxyAuthorization is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpCredentialsHeaderValue%20HttpRequestHeaderCollection.ProxyAuthorization");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpRequestHeaderCollection", "HttpCredentialsHeaderValue HttpRequestHeaderCollection.ProxyAuthorization");
			}
		}
#endif
		// Skipping already declared property MaxForwards
		// Skipping already declared property IfUnmodifiedSince
		// Skipping already declared property IfModifiedSince
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.HostName Host
		{
			get
			{
				throw new global::System.NotImplementedException("The member HostName HttpRequestHeaderCollection.Host is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HostName%20HttpRequestHeaderCollection.Host");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpRequestHeaderCollection", "HostName HttpRequestHeaderCollection.Host");
			}
		}
#endif
		// Skipping already declared property From
		// Skipping already declared property Date
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpCredentialsHeaderValue Authorization
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpCredentialsHeaderValue HttpRequestHeaderCollection.Authorization is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpCredentialsHeaderValue%20HttpRequestHeaderCollection.Authorization");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpRequestHeaderCollection", "HttpCredentialsHeaderValue HttpRequestHeaderCollection.Authorization");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection Accept
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpMediaTypeWithQualityHeaderValueCollection HttpRequestHeaderCollection.Accept is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpMediaTypeWithQualityHeaderValueCollection%20HttpRequestHeaderCollection.Accept");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection AcceptEncoding
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpContentCodingWithQualityHeaderValueCollection HttpRequestHeaderCollection.AcceptEncoding is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpContentCodingWithQualityHeaderValueCollection%20HttpRequestHeaderCollection.AcceptEncoding");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection AcceptLanguage
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpLanguageRangeWithQualityHeaderValueCollection HttpRequestHeaderCollection.AcceptLanguage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpLanguageRangeWithQualityHeaderValueCollection%20HttpRequestHeaderCollection.AcceptLanguage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection CacheControl
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpCacheDirectiveHeaderValueCollection HttpRequestHeaderCollection.CacheControl is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpCacheDirectiveHeaderValueCollection%20HttpRequestHeaderCollection.CacheControl");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection Connection
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpConnectionOptionHeaderValueCollection HttpRequestHeaderCollection.Connection is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpConnectionOptionHeaderValueCollection%20HttpRequestHeaderCollection.Connection");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection Cookie
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpCookiePairHeaderValueCollection HttpRequestHeaderCollection.Cookie is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpCookiePairHeaderValueCollection%20HttpRequestHeaderCollection.Cookie");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection Expect
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpExpectationHeaderValueCollection HttpRequestHeaderCollection.Expect is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpExpectationHeaderValueCollection%20HttpRequestHeaderCollection.Expect");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection TransferEncoding
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpTransferCodingHeaderValueCollection HttpRequestHeaderCollection.TransferEncoding is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpTransferCodingHeaderValueCollection%20HttpRequestHeaderCollection.TransferEncoding");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection UserAgent
		{
			get
			{
				throw new global::System.NotImplementedException("The member HttpProductInfoHeaderValueCollection HttpRequestHeaderCollection.UserAgent is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HttpProductInfoHeaderValueCollection%20HttpRequestHeaderCollection.UserAgent");
			}
		}
#endif
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Accept.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.AcceptEncoding.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.AcceptLanguage.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Authorization.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Authorization.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.CacheControl.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Connection.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Cookie.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Date.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Date.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Expect.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.From.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.From.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Host.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Host.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.IfModifiedSince.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.IfModifiedSince.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.IfUnmodifiedSince.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.IfUnmodifiedSince.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.MaxForwards.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.MaxForwards.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.ProxyAuthorization.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.ProxyAuthorization.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Referer.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Referer.set
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.TransferEncoding.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.UserAgent.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Append(string name, string value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Web.Http.Headers.HttpRequestHeaderCollection", "void HttpRequestHeaderCollection.Append(string name, string value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool TryAppendWithoutValidation(string name, string value)
		{
			throw new global::System.NotImplementedException("The member bool HttpRequestHeaderCollection.TryAppendWithoutValidation(string name, string value) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HttpRequestHeaderCollection.TryAppendWithoutValidation%28string%20name%2C%20string%20value%29");
		}
#endif
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Lookup(string)
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Size.get
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.HasKey(string)
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.GetView()
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Insert(string, string)
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Remove(string)
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.Clear()
		// Forced skipping of method Windows.Web.Http.Headers.HttpRequestHeaderCollection.First()
		// Skipping already declared method Windows.Web.Http.Headers.HttpRequestHeaderCollection.ToString()
		// Processing: System.Collections.Generic.IDictionary<string, string>
		// Skipping already implement System.Collections.Generic.IDictionary<string, string>.this[string]
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.ICollection<string> Keys
		{
			get
			{
				throw new global::System.NotSupportedException();
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.ICollection<string> Values
		{
			get
			{
				throw new global::System.NotSupportedException();
			}
		}
#endif
		// Processing: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void CopyTo(global::System.Collections.Generic.KeyValuePair<string, string>[] array, int arrayIndex)
		{
			throw new global::System.NotSupportedException();
		}
#endif
		// Skipping already implement System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>.Count
		// Skipping already implement System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, string>>.IsReadOnly
		// Processing: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>
		// Processing: System.Collections.IEnumerable
	}
}
