<#@template language="C#"#>
<#@output extension=".cs" #>

<#
	_namespaces = new NamespacesBuilder()
		.Namespace("Microsoft.UI.Xaml.Controls")

			.Class("Control")
				.Property("BackgroundSizing", "BackgroundSizing", "default")
				.Property("HorizontalContentAlignment", "HorizontalAlignment", "(Uno.UI.FeatureConfiguration.Control.UseLegacyContentAlignment ? HorizontalAlignment.Left : HorizontalAlignment.Center)")
				.Property("VerticalContentAlignment", "VerticalAlignment", "(Uno.UI.FeatureConfiguration.Control.UseLegacyContentAlignment ? VerticalAlignment.Top : VerticalAlignment.Center)")				
			.Class("Picker", condition: "__IOS__")			
				.Property("ItemsSource", "object", "null")
				.Property("SelectedItem", "object", "null")
				.Property("SelectedIndex", "int", "-1")
				.Property("ItemTemplate", "DataTemplate", "null", frameworkPropertyOption: "ValueDoesNotInheritDataContext")
				.Property("ItemContainerStyle", "Style", "null", frameworkPropertyOption: "ValueDoesNotInheritDataContext")
				.Property("ItemTemplateSelector", "DataTemplateSelector", "null")
				.Property("DisplayMemberPath", "string", "string.Empty") // TODO: Move to ItemsControl
				.Property("Placeholder", "object", "null")
			.Class("ComboBox")
				.Property("PlaceholderText", "string", "string.Empty")
				.Property("IsDropDownOpen", "bool", "false")
				.Property("MaxDropDownHeight", "double", "double.PositiveInfinity")
			.Class("ItemsControl")
				.Property("DisplayMemberPath", "string", "string.Empty")
			.Class("ListViewBase")
				.Property("Header", "object", "null")
				.Property("HeaderTemplate", "DataTemplate", "null", frameworkPropertyOption: "ValueDoesNotInheritDataContext")
				.Property("Footer", "object", "null")
				.Property("FooterTemplate", "DataTemplate", "null", frameworkPropertyOption: "ValueDoesNotInheritDataContext")
				.Property("SelectionMode", "ListViewSelectionMode", "ListViewSelectionMode.Single")
				.Property("IsItemClickEnabled", "bool", "false")
				.Property("DataFetchSize", "double", "3d")
				.Property("IncrementalLoadingThreshold", "double", "0d")
				.Property("IncrementalLoadingTrigger", "IncrementalLoadingTrigger", "IncrementalLoadingTrigger.Edge")
			// https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.itemsstackpanel.aspx
			.Class("ItemsStackPanel")
				.Property("AreStickyGroupHeadersEnabled", "bool", "true")
				.Property("GroupHeaderPlacement","GroupHeaderPlacement", "GroupHeaderPlacement.Top")
				.Property("GroupPadding","Thickness","Thickness.Empty")
				.Property("Orientation", "Orientation", "Orientation.Vertical")
				.Property("CacheLength", "double", "4.0", condition: "__ANDROID__")
			// https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.itemswrapgrid.aspx
			.Class("ItemsWrapGrid")
				.Property("AreStickyGroupHeadersEnabled", "bool", "true")
				.Property("GroupHeaderPlacement","GroupHeaderPlacement", "GroupHeaderPlacement.Top")
				.Property("GroupPadding","Thickness","Thickness.Empty")
				.Property("ItemHeight", "double", "Double.NaN")
				.Property("ItemWidth", "double", "Double.NaN")
				.Property("Orientation", "Orientation", "Orientation.Vertical")
				.Property("MaximumRowsOrColumns", "int", "-1")
				.Property("CacheLength", "double", "4.0", condition: "__ANDROID__")
			.Class("VirtualizingPanelLayout", accessModifier: "public")
				.Property("AreStickyGroupHeadersEnabled", "bool", "true")
				.Property("GroupHeaderPlacement","GroupHeaderPlacement", "GroupHeaderPlacement.Top")
				.Property("GroupPadding","Thickness","Thickness.Empty")
				.Property("CacheLength", "double", "4.0")
			.Class("ItemsWrapGridLayout", accessModifier: "internal")
				.Property("ItemHeight", "double", "Double.NaN")
				.Property("ItemWidth", "double", "Double.NaN")
				.Property("MaximumRowsOrColumns", "int", "-1")
			.Class("DatePickerSelector")
				.Property("Date", "DateTimeOffset", "DateTimeOffset.MinValue")
				.Property("DayVisible", "bool", "true")
				.Property("MonthVisible", "bool", "true")
				.Property("YearVisible", "bool", "true")
				.Property("MaxYear", "DateTimeOffset", "DateTimeOffset.MaxValue")
				.Property("MinYear", "DateTimeOffset", "DateTimeOffset.MinValue")
			.Class("DatePickerFlyout")
				.Property("DayVisible", "bool", "true")
				.Property("MonthVisible", "bool", "true")
				.Property("YearVisible", "bool", "true")
			.Class("TimePickerFlyout")
				.Property("Time", "TimeSpan", "DateTime.Now.TimeOfDay")
				.Property("MinuteIncrement", "int", "1")
				.Property("ClockIdentifier", "string", "Windows.Globalization.ClockIdentifiers.TwelveHour")
			.Class("TimePickerSelector")
				.Property("Time", "TimeSpan", "DateTime.Now.TimeOfDay")
				.Property("MinuteIncrement", "int", "1")
				.Property("ClockIdentifier", "string", "Windows.Globalization.ClockIdentifiers.TwelveHour")
			.Class("TimePicker")
				.Property("ClockIdentifier", "string", "Windows.Globalization.ClockIdentifiers.TwelveHour")

		.Namespace("Microsoft.UI.Xaml.Controls.Primitives")
			.Class("SelectorItem")
				.Property("IsSelected", "bool", "false")
			.Class("Popup")
				.Property("IsOpen", "bool", "false")
				.Property("Child", "UIElement", "null", frameworkPropertyOption: "ValueInheritsDataContext")
				.Property("IsLightDismissEnabled", "bool", "false")
				//.Property("ChildTransitions", "TransitionCollection", "null")

		.Namespace("Uno.UI.Controls.Legacy")
			.Class("ListViewBase", condition: "__IOS__")
				.Property("DisplayMemberPath", "string", "string.Empty")
			.Class("ListView", condition: "__ANDROID__")
				.Property("DisplayMemberPath", "string", "string.Empty")
			.Class("HorizontalListView", condition: "__ANDROID__")
				.Property("DisplayMemberPath", "string", "string.Empty")
			.Class("GridView", condition: "__ANDROID__")
				.Property("DisplayMemberPath", "string", "string.Empty")
			.Class("HorizontalGridView", condition: "__ANDROID__")
				.Property("DisplayMemberPath", "string", "string.Empty")
		.Namespace("Microsoft.UI.Xaml.Controls.Primitives")
	.Build();
#>

<#@include file="../Uno.UI/UI/Xaml/DependencyPropertiesImplementation.tt"#>
