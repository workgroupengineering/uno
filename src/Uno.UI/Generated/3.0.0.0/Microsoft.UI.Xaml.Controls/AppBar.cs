// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class AppBar
	{
		// Skipping already declared property LightDismissOverlayMode
		// Skipping already declared property IsSticky
		// Skipping already declared property IsOpen
		// Skipping already declared property ClosedDisplayMode
		// Skipping already declared property TemplateSettings
		// Skipping already declared property ClosedDisplayModeProperty
		// Skipping already declared property IsOpenProperty
		// Skipping already declared property IsStickyProperty
		// Skipping already declared property LightDismissOverlayModeProperty
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AppBar.AppBar()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.AppBar()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.IsOpen.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.IsOpen.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.IsSticky.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.IsSticky.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.ClosedDisplayMode.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.ClosedDisplayMode.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.TemplateSettings.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.LightDismissOverlayMode.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.LightDismissOverlayMode.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Opening.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Opening.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Opened.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Opened.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Closing.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Closing.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Closed.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.Closed.remove
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AppBar.OnClosed(object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AppBar.OnOpened(object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AppBar.OnClosing(object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.AppBar.OnOpening(object)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.IsOpenProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.IsStickyProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.ClosedDisplayModeProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.AppBar.LightDismissOverlayModeProperty.get
		// Skipping already declared event Microsoft.UI.Xaml.Controls.AppBar.Closed
		// Skipping already declared event Microsoft.UI.Xaml.Controls.AppBar.Closing
		// Skipping already declared event Microsoft.UI.Xaml.Controls.AppBar.Opened
		// Skipping already declared event Microsoft.UI.Xaml.Controls.AppBar.Opening
	}
}
