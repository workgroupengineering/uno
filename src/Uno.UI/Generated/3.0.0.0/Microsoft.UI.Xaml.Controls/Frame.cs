// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class Frame : global::Microsoft.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.INavigate
	{
		// Skipping already declared property SourcePageType
		// Skipping already declared property IsNavigationStackEnabled
		// Skipping already declared property CacheSize
		// Skipping already declared property BackStack
		// Skipping already declared property BackStackDepth
		// Skipping already declared property CanGoBack
		// Skipping already declared property CanGoForward
		// Skipping already declared property CurrentSourcePageType
		// Skipping already declared property ForwardStack
		// Skipping already declared property BackStackDepthProperty
		// Skipping already declared property BackStackProperty
		// Skipping already declared property CacheSizeProperty
		// Skipping already declared property CanGoBackProperty
		// Skipping already declared property CanGoForwardProperty
		// Skipping already declared property CurrentSourcePageTypeProperty
		// Skipping already declared property ForwardStackProperty
		// Skipping already declared property IsNavigationStackEnabledProperty
		// Skipping already declared property SourcePageTypeProperty
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.Frame()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.Frame()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CacheSize.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CacheSize.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CanGoBack.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CanGoForward.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CurrentSourcePageType.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.SourcePageType.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.SourcePageType.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.BackStackDepth.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.BackStack.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.ForwardStack.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.IsNavigationStackEnabled.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.IsNavigationStackEnabled.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.Navigated.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.Navigated.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.Navigating.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.Navigating.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.NavigationFailed.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.NavigationFailed.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.NavigationStopped.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.NavigationStopped.remove
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.GoBack()
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.GoBack(Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.GoForward()
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.Navigate(System.Type, object)
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.Navigate(System.Type, object, Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool NavigateToType(global::System.Type sourcePageType, object parameter, global::Microsoft.UI.Xaml.Navigation.FrameNavigationOptions navigationOptions)
		{
			throw new global::System.NotImplementedException("The member bool Frame.NavigateToType(Type sourcePageType, object parameter, FrameNavigationOptions navigationOptions) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20Frame.NavigateToType%28Type%20sourcePageType%2C%20object%20parameter%2C%20FrameNavigationOptions%20navigationOptions%29");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.GetNavigationState()
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.SetNavigationState(string)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetNavigationState(string navigationState, bool suppressNavigate)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.Frame", "void Frame.SetNavigationState(string navigationState, bool suppressNavigate)");
		}
#endif
		// Skipping already declared method Microsoft.UI.Xaml.Controls.Frame.Navigate(System.Type)
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CacheSizeProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CanGoBackProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CanGoForwardProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.CurrentSourcePageTypeProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.SourcePageTypeProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.BackStackDepthProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.BackStackProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.ForwardStackProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.Frame.IsNavigationStackEnabledProperty.get
		// Skipping already declared event Microsoft.UI.Xaml.Controls.Frame.Navigated
		// Skipping already declared event Microsoft.UI.Xaml.Controls.Frame.Navigating
		// Skipping already declared event Microsoft.UI.Xaml.Controls.Frame.NavigationFailed
		// Skipping already declared event Microsoft.UI.Xaml.Controls.Frame.NavigationStopped
		// Processing: Microsoft.UI.Xaml.Controls.INavigate
	}
}
