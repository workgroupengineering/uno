// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.Web.WebView2.Core
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class CoreWebView2Settings
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsZoomControlEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsZoomControlEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsZoomControlEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsZoomControlEnabled");
			}
		}
#endif
		// Skipping already declared property IsWebMessageEnabled
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsStatusBarEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsStatusBarEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsStatusBarEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsStatusBarEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsScriptEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsScriptEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsScriptEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsScriptEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsBuiltInErrorPageEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsBuiltInErrorPageEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsBuiltInErrorPageEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsBuiltInErrorPageEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AreHostObjectsAllowed
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.AreHostObjectsAllowed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.AreHostObjectsAllowed");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.AreHostObjectsAllowed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AreDevToolsEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.AreDevToolsEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.AreDevToolsEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.AreDevToolsEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AreDefaultScriptDialogsEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.AreDefaultScriptDialogsEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.AreDefaultScriptDialogsEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.AreDefaultScriptDialogsEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AreDefaultContextMenusEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.AreDefaultContextMenusEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.AreDefaultContextMenusEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.AreDefaultContextMenusEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter HostObjectDispatchAdapter
		{
			get
			{
				throw new global::System.NotImplementedException("The member ICoreWebView2DispatchAdapter CoreWebView2Settings.HostObjectDispatchAdapter is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ICoreWebView2DispatchAdapter%20CoreWebView2Settings.HostObjectDispatchAdapter");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "ICoreWebView2DispatchAdapter CoreWebView2Settings.HostObjectDispatchAdapter");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string UserAgent
		{
			get
			{
				throw new global::System.NotImplementedException("The member string CoreWebView2Settings.UserAgent is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20CoreWebView2Settings.UserAgent");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "string CoreWebView2Settings.UserAgent");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AreBrowserAcceleratorKeysEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.AreBrowserAcceleratorKeysEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.AreBrowserAcceleratorKeysEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.AreBrowserAcceleratorKeysEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsPasswordAutosaveEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsPasswordAutosaveEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsPasswordAutosaveEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsPasswordAutosaveEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsGeneralAutofillEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsGeneralAutofillEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsGeneralAutofillEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsGeneralAutofillEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsPinchZoomEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsPinchZoomEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsPinchZoomEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsPinchZoomEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsSwipeNavigationEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2Settings.IsSwipeNavigationEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2Settings.IsSwipeNavigationEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "bool CoreWebView2Settings.IsSwipeNavigationEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems HiddenPdfToolbarItems
		{
			get
			{
				throw new global::System.NotImplementedException("The member CoreWebView2PdfToolbarItems CoreWebView2Settings.HiddenPdfToolbarItems is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CoreWebView2PdfToolbarItems%20CoreWebView2Settings.HiddenPdfToolbarItems");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.Web.WebView2.Core.CoreWebView2Settings", "CoreWebView2PdfToolbarItems CoreWebView2Settings.HiddenPdfToolbarItems");
			}
		}
#endif
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.UserAgent.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.UserAgent.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreBrowserAcceleratorKeysEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreBrowserAcceleratorKeysEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsPasswordAutosaveEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsPasswordAutosaveEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsGeneralAutofillEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsGeneralAutofillEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsPinchZoomEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsPinchZoomEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsSwipeNavigationEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsSwipeNavigationEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.HiddenPdfToolbarItems.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.HiddenPdfToolbarItems.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.HostObjectDispatchAdapter.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.HostObjectDispatchAdapter.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsScriptEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsScriptEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsWebMessageEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsWebMessageEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreDefaultScriptDialogsEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreDefaultScriptDialogsEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsStatusBarEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsStatusBarEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreDevToolsEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreDevToolsEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreDefaultContextMenusEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreDefaultContextMenusEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreHostObjectsAllowed.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.AreHostObjectsAllowed.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsZoomControlEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsZoomControlEnabled.set
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsBuiltInErrorPageEnabled.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2Settings.IsBuiltInErrorPageEnabled.set
	}
}
