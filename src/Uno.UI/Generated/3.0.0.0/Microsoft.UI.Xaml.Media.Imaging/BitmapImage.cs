// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Media.Imaging
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class BitmapImage : global::Microsoft.UI.Xaml.Media.Imaging.BitmapSource
	{
		// Skipping already declared property UriSource
		// Skipping already declared property DecodePixelWidth
		// Skipping already declared property DecodePixelType
		// Skipping already declared property DecodePixelHeight
		// Skipping already declared property CreateOptions
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AutoPlay
		{
			get
			{
				return (bool)this.GetValue(AutoPlayProperty);
			}
			set
			{
				this.SetValue(AutoPlayProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsAnimatedBitmap
		{
			get
			{
				return (bool)this.GetValue(IsAnimatedBitmapProperty);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsPlaying
		{
			get
			{
				return (bool)this.GetValue(IsPlayingProperty);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty AutoPlayProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(AutoPlay), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
		// Skipping already declared property CreateOptionsProperty
		// Skipping already declared property DecodePixelHeightProperty
		// Skipping already declared property DecodePixelTypeProperty
		// Skipping already declared property DecodePixelWidthProperty
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsAnimatedBitmapProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IsAnimatedBitmap), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty IsPlayingProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(IsPlaying), typeof(bool),
			typeof(global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(bool)));
#endif
		// Skipping already declared property UriSourceProperty
		// Skipping already declared method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.BitmapImage(System.Uri)
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.BitmapImage(System.Uri)
		// Skipping already declared method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.BitmapImage()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.BitmapImage()
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.CreateOptions.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.CreateOptions.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.UriSource.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.UriSource.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidth.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidth.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeight.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeight.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelType.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelType.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsAnimatedBitmap.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsPlaying.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.AutoPlay.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.AutoPlay.set
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DownloadProgress.add
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DownloadProgress.remove
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageOpened.add
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageOpened.remove
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageFailed.add
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageFailed.remove
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Play()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Imaging.BitmapImage", "void BitmapImage.Play()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Stop()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Media.Imaging.BitmapImage", "void BitmapImage.Stop()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.CreateOptionsProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.UriSourceProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidthProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeightProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelTypeProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsAnimatedBitmapProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.IsPlayingProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Media.Imaging.BitmapImage.AutoPlayProperty.get
		// Skipping already declared event Microsoft.UI.Xaml.Media.Imaging.BitmapImage.DownloadProgress
		// Skipping already declared event Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageFailed
		// Skipping already declared event Microsoft.UI.Xaml.Media.Imaging.BitmapImage.ImageOpened
	}
}
