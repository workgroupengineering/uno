<UserControl
	x:Class="Uno.UI.Samples.Content.UITests.ButtonTestsControl.Buttons"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ios="http://uno.ui/ios"
	xmlns:android="http://uno.ui/android"
	mc:Ignorable="d ios android"
	d:DesignHeight="300"
	d:DesignWidth="400">

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<StackPanel Grid.Column="0">
			<HyperlinkButton Content="HyperlinkButton"
							 Click="OnClick"
							 Tapped="OnTapped"
							 IsEnabled="{Binding IsEnabled}"
							 Command="{Binding Command}"
							 CommandParameter="Microsoft.UI.Xaml.Controls.HyperlinkButton" />
			<HyperlinkButton Content="HyperlinkButton (NavigateUri)"
							 Click="OnClick"
							 Tapped="OnTapped"
							 IsEnabled="{Binding IsEnabled}"
							 Command="{Binding Command}"
							 CommandParameter="Microsoft.UI.Xaml.Controls.HyperlinkButton"
							 NavigateUri="http://nventive.com" />
			<Button Content="Button"
					Click="OnClick"
					Tapped="OnTapped"
					IsEnabled="{Binding IsEnabled}"
					Command="{Binding Command}"
					CommandParameter="Microsoft.UI.Xaml.Controls.Button" />
			<ToggleButton Content="ToggleButton"
						  Click="OnClick"
						  Tapped="OnTapped"
						  IsChecked="{Binding IsChecked}"
						  IsEnabled="{Binding IsEnabled}"
						  Command="{Binding Command}"
						  CommandParameter="Microsoft.UI.Xaml.Controls.Primitives.ToggleButton" />
			<CheckBox Content="CheckBox"
					  Click="OnClick"
					  Tapped="OnTapped"
					  IsChecked="{Binding IsChecked}"
					  IsEnabled="{Binding IsEnabled}"
					  Command="{Binding Command}"
					  CommandParameter="Microsoft.UI.Xaml.Controls.CheckBox" />
			<RadioButton Content="RadioButton"
						 Click="OnClick"
						 Tapped="OnTapped"
						 IsChecked="{Binding IsChecked}"
						 IsEnabled="{Binding IsEnabled}"
						 Command="{Binding Command}"
						 CommandParameter="Microsoft.UI.Xaml.Controls.RadioButton" />
			<TextBlock Text="Native styles (if applicable)"
					   Margin="0,20,0,0"/>
			<Button Content="Button"
					android:Style="{StaticResource AndroidButtonStyle}"
					ios:Style="{StaticResource iOSButtonStyle}"
					Click="OnClick"
					Tapped="OnTapped"
					IsEnabled="{Binding IsEnabled}"
					Command="{Binding Command}"
					CommandParameter="Microsoft.UI.Xaml.Controls.Button" />
			<CheckBox Content="CheckBox"
					  android:Style="{StaticResource AndroidCheckBoxStyle}"
					  Click="OnClick"
					  Tapped="OnTapped"
					  IsChecked="{Binding IsChecked}"
					  IsEnabled="{Binding IsEnabled}"
					  Command="{Binding Command}"
					  CommandParameter="Microsoft.UI.Xaml.Controls.CheckBox" />
			<RadioButton Content="RadioButton"
						 android:Style="{StaticResource AndroidRadioButtonStyle}"
						 Click="OnClick"
						 Tapped="OnTapped"
						 IsChecked="{Binding IsChecked}"
						 IsEnabled="{Binding IsEnabled}"
						 Command="{Binding Command}"
						 CommandParameter="Microsoft.UI.Xaml.Controls.RadioButton" />
		</StackPanel>
		<StackPanel Grid.Column="1" x:Name="myStackPanel">
			<CheckBox Content="IsEnabled"
					  IsChecked="{Binding IsEnabled, Mode=TwoWay}" />
			<CheckBox Content="IsChecked"
					  IsChecked="{Binding IsChecked, Mode=TwoWay}" />
			<Button Content="Clear"
					Command="{Binding ClearCommand}" />
			<ItemsControl ItemsSource="{Binding Output}" x:Name="myItemsControl" />
			<TextBlock Text="This button changes foreground when hovered or pressed when fluent styles are enabled"
					   Margin="0,20,0,0"/>
			<Button Content="Change Button Foreground">
				<Button.Resources>
					<ResourceDictionary>
								<SolidColorBrush x:Key="ButtonForeground" Color="Yellow"/>
								<SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="Red"/>
								<SolidColorBrush x:Key="ButtonForegroundPressed" Color="Purple"/>
					</ResourceDictionary>
				</Button.Resources>
			</Button>
			<TextBlock Text="This button changes background when hovered or pressed when fluent styles are enabled"
					   Margin="0,20,0,0"/>
			<Button Content="Change Button Background">
				<Button.Resources>
					<ResourceDictionary>
								<SolidColorBrush x:Key="ButtonBackground" Color="Yellow"/>
								<SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="Red"/>
								<SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Purple"/>
					</ResourceDictionary>
				</Button.Resources>
			</Button>
		</StackPanel>
	</Grid>
</UserControl>
