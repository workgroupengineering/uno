// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.Graphics.Display
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class DisplayAdvancedColorInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal DisplayAdvancedColorInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Point BluePrimary
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point DisplayAdvancedColorInfo.BluePrimary is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20DisplayAdvancedColorInfo.BluePrimary");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.Graphics.Display.DisplayAdvancedColorKind CurrentAdvancedColorKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member DisplayAdvancedColorKind DisplayAdvancedColorInfo.CurrentAdvancedColorKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DisplayAdvancedColorKind%20DisplayAdvancedColorInfo.CurrentAdvancedColorKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Point GreenPrimary
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point DisplayAdvancedColorInfo.GreenPrimary is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20DisplayAdvancedColorInfo.GreenPrimary");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double MaxAverageFullFrameLuminanceInNits
		{
			get
			{
				throw new global::System.NotImplementedException("The member double DisplayAdvancedColorInfo.MaxAverageFullFrameLuminanceInNits is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20DisplayAdvancedColorInfo.MaxAverageFullFrameLuminanceInNits");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double MaxLuminanceInNits
		{
			get
			{
				throw new global::System.NotImplementedException("The member double DisplayAdvancedColorInfo.MaxLuminanceInNits is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20DisplayAdvancedColorInfo.MaxLuminanceInNits");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double MinLuminanceInNits
		{
			get
			{
				throw new global::System.NotImplementedException("The member double DisplayAdvancedColorInfo.MinLuminanceInNits is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20DisplayAdvancedColorInfo.MinLuminanceInNits");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Point RedPrimary
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point DisplayAdvancedColorInfo.RedPrimary is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20DisplayAdvancedColorInfo.RedPrimary");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double SdrWhiteLevelInNits
		{
			get
			{
				throw new global::System.NotImplementedException("The member double DisplayAdvancedColorInfo.SdrWhiteLevelInNits is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20DisplayAdvancedColorInfo.SdrWhiteLevelInNits");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Point WhitePoint
		{
			get
			{
				throw new global::System.NotImplementedException("The member Point DisplayAdvancedColorInfo.WhitePoint is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Point%20DisplayAdvancedColorInfo.WhitePoint");
			}
		}
#endif
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.CurrentAdvancedColorKind.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.RedPrimary.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.GreenPrimary.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.BluePrimary.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.WhitePoint.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.MaxLuminanceInNits.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.MinLuminanceInNits.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.MaxAverageFullFrameLuminanceInNits.get
		// Forced skipping of method Microsoft.Graphics.Display.DisplayAdvancedColorInfo.SdrWhiteLevelInNits.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsHdrMetadataFormatCurrentlySupported(global::Microsoft.Graphics.Display.DisplayHdrMetadataFormat format)
		{
			throw new global::System.NotImplementedException("The member bool DisplayAdvancedColorInfo.IsHdrMetadataFormatCurrentlySupported(DisplayHdrMetadataFormat format) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20DisplayAdvancedColorInfo.IsHdrMetadataFormatCurrentlySupported%28DisplayHdrMetadataFormat%20format%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsAdvancedColorKindAvailable(global::Microsoft.Graphics.Display.DisplayAdvancedColorKind kind)
		{
			throw new global::System.NotImplementedException("The member bool DisplayAdvancedColorInfo.IsAdvancedColorKindAvailable(DisplayAdvancedColorKind kind) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20DisplayAdvancedColorInfo.IsAdvancedColorKindAvailable%28DisplayAdvancedColorKind%20kind%29");
		}
#endif
	}
}
